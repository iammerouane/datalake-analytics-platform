version: "3.9"

services:
  ####### HADOOP
  hadoop-namenode:
    container_name: hadoop-namenode
    restart: always
    build: ./hadoop/namenode
    ports:
      - 9870:9870
      - 9000:9000
    networks:
     - bds-network
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - ./data:/data 
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop/hadoop.env

  hadoop-datanode:
    container_name: hadoop-datanode
    restart: always
    build: ./hadoop/datanode
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
      - ./data:/data 
    networks:
     - bds-network
    environment:
      SERVICE_PRECONDITION: "hadoop-namenode:9870"
    env_file:
      - ./hadoop/hadoop.env
  
  hadoop-resourcemanager:
    container_name: hadoop-resourcemanager
    restart: always
    build: ./hadoop/resourcemanager
    networks:
     - bds-network
    environment:
      SERVICE_PRECONDITION: "hadoop-namenode:9000 hadoop-namenode:9870 hadoop-datanode:9864"
    env_file:
      - ./hadoop/hadoop.env

  hadoop-nodemanager-1:
    container_name: hadoop-nodemanager-1
    restart: always
    build: ./hadoop/nodemanager
    networks:
     - bds-network
    environment:
      SERVICE_PRECONDITION: "hadoop-namenode:9000 hadoop-namenode:9870 hadoop-datanode:9864 hadoop-resourcemanager:8088"
    env_file:
      - ./hadoop/hadoop.env

  hadoop-historyserver:
    container_name: hadoop-historyserver
    restart: always
    build: ./hadoop/historyserver
    networks:
     - bds-network
    environment:
      SERVICE_PRECONDITION: "hadoop-namenode:9000 hadoop-namenode:9870 hadoop-datanode:9864 hadoop-resourcemanager:8088"
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop/hadoop.env

  ####### SPARK
  spark-master:
    build: ./spark/master
    container_name: spark-master
    ports:
      - 8080:8080
      - 7077:7077
    networks:
     - bds-network
    volumes:
      - shared-workspace:/opt/workspace

  spark-worker-1:
    build: ./spark/worker
    container_name: spark-worker-1
    environment:
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=512m
    ports:
      - 8081:8081
    networks:
     - bds-network
    volumes:
      - shared-workspace:/opt/workspace
    depends_on:
      - spark-master

  spark-worker-2:
    build: ./spark/worker
    container_name: spark-worker-2
    environment:
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=512m
    networks:
     - bds-network
    ports:
      - 8082:8081
    volumes:
      - shared-workspace:/opt/workspace
    depends_on:
      - spark-master
  
  ####### JUPYTER
  jupyter-notebook:
    build: ./jupyter
    container_name: jupyter-notebook
    ports:
      - 8888:8888
      - 4040:4040
    networks:
     - bds-network
    volumes:
      - shared-workspace:/opt/workspace

  ####### MySQL
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: nebula_pw
      MYSQL_DATABASE: nebula_db
      MYSQL_USER: nebula_user
      MYSQL_PASSWORD: nebula_pw
    networks:
      - bds-network
    ports:
      - 3306:3306
    volumes:
      - mysql-data:/var/lib/mysql

  ####### Apache Superset
  superset:
    build: ./superset
    container_name: superset
    restart: always
    environment:
      - SUPERSET_DATABASE_URI=mysql://root:nebula_pw@mysql/nebula_db
      - SUPERSET_LOAD_EXAMPLES=yes
      - WTF_CSRF_ENABLED = False
      - SUPERSET_SECRET_KEY=53wclGt2t78CLV3O0meSL8K6ivdSbpkQeDyOSLbPLuMqHY/r7HwuyLq7
      - SECRET_KEY=53wclGt2t78CLV3O0meSL8K6ivdSbpkQeDyOSLbPLuMqHY/r7HwuyLq7
      - ADMIN_USERNAME=admin
      - ADMIN_EMAIL=admin@superset.com
      - ADMIN_PASSWORD=admin
    networks:
      - bds-network
    ports:
      - 8088:8088
    volumes:
      - superset-data:/app/superset
    depends_on:
      - mysql

  # PROMETHEUS
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
  # GRAFANA
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources

volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_historyserver:
  mysql-data:
  superset-data:
  prom_data:
  shared-workspace:
    name: "hadoop-distributed-file-system"
    driver: local

networks:
  bds-network:
    driver: bridge
